version: '3.8'

services:
  fincache:
    build: .
    container_name: fincache
    ports:
      - "6379:6379"  # For Redis protocol
      - "8080:8080"  # added HTTP API # check TLS/SSL
    volumes:
      - fincache_data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - FINCACHE_HOST=0.0.0.0
      - FINCACHE_PORT=6379
      - FINCACHE_API_PORT=8080
      - FINCACHE_ENABLE_METRICS=true
      - FINCACHE_ENABLE_HEALTH=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fincache_network

  # Redis for comparison
  redis:
    image: redis:7-alpine
    container_name: fincache-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - fincache_network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: fincache-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - fincache_network

  # Grafana for visualization - TODO: CONFIGURE
  grafana:
    image: grafana/grafana:latest
    container_name: fincache-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    networks:
      - fincache_network

volumes: # TODO: ADD DEFAULTS
  fincache_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  fincache_network:
    driver: bridge 